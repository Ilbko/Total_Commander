<Window x:Class="Total_Commander.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Total_Commander" xmlns:Control="clr-namespace:Total_Commander.View" xmlns:local1="clr-namespace:Total_Commander.CustomControl.ViewModel"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1200">
    <Window.Resources>
        <local1:TableViewModel x:Key="tableViewModel"></local1:TableViewModel>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="ListView">
                <Setter Property="BorderBrush" Value="Gray"></Setter>
                <Setter Property="BorderThickness" Value="2"></Setter>
            </Style>
        </Grid.Resources>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="40"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <!--Тут происходит привязка свойства SelectedItems элемента управления ListView кастомного элемента TableControl. Поскольку у кастомного элемента указан свой DataContext(TableViewModel), а у главного окна - свой(CommanderViewModel), 
        где и содержится свойство SelectedItems, то только для этих элементов(TableControl) главного окна нужно переопределить DataContext, чтобы привязаться к свойству DataContext главного окна. Объект CommanderViewModel определён в главном окне, которое является родителем кастомного
        элемента(TableControl). Поэтому через RelativeSource мы можем обратиться к родителю (Mode=FindAncestor), тип которого - окно (AncestorType={x:Type Window} и получить путь к нужному свойству в DataContext окна(Path=DataContext.SelectedItems))-->
        <Control:TableControl x:Name="firstFileTable" Grid.Row="0" Grid.Column="0" SelectedItemsProperty="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SelectedItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></Control:TableControl>
        <Control:TableControl x:Name="secondFileTable" Grid.Row="0" Grid.Column="2" SelectedItemsProperty="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SelectedItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></Control:TableControl>
        <!--нужно указать источник.-->
        <!--SelectedItemsProperty="{Binding SelectedItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"-->
        
        <UniformGrid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Columns="4">
            <UniformGrid.Resources>
                <Style TargetType="Button">
                    <Setter Property="BorderThickness" Value="1, 0, 1, 0"></Setter>
                    <Setter Property="Margin" Value="0, 5, 0, 0"></Setter>
                    <Setter Property="Background" Value="White"></Setter>
                </Style>
            </UniformGrid.Resources>
            <Button>Копирование</Button>
            <Button>Перемещение</Button>
            <Button Command="{Binding DeleteCommand}">Удаление</Button>
            <Button Command="{Binding ExitCommand}">Выход</Button>
        </UniformGrid>
    </Grid>
</Window>
